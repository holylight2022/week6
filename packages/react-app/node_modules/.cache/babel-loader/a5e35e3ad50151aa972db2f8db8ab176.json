{"ast":null,"code":"import { constants } from 'ethers';\nimport { useState, useEffect } from 'react';\n/**\r\n * Gets the address from an ENS name and provider\r\n * @param provider (TEthersProvider)\r\n * @param ensName (string)\r\n * @returns (string) :: address\r\n */\n\nexport const useResolveEnsName = (provider, ensName) => {\n  const [address, setAddress] = useState(constants.AddressZero);\n  useEffect(() => {\n    if (provider) {\n      void provider.resolveName(ensName).then(resolvedAddress => setAddress(resolvedAddress));\n    }\n  }, [provider, ensName]);\n  return address;\n};","map":{"version":3,"sources":["C:/Users/Firebat/challenge-1-decentralized-staking/node_modules/eth-hooks/dapps/ens/useResolveEnsName.js"],"names":["constants","useState","useEffect","useResolveEnsName","provider","ensName","address","setAddress","AddressZero","resolveName","then","resolvedAddress"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACD,SAAS,CAACQ,WAAX,CAAtC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIE,QAAJ,EAAc;AACV,WAAKA,QAAQ,CAACK,WAAT,CAAqBJ,OAArB,EAA8BK,IAA9B,CAAoCC,eAAD,IAAqBJ,UAAU,CAACI,eAAD,CAAlE,CAAL;AACH;AACJ,GAJQ,EAIN,CAACP,QAAD,EAAWC,OAAX,CAJM,CAAT;AAKA,SAAOC,OAAP;AACH,CARM","sourcesContent":["import { constants } from 'ethers';\r\nimport { useState, useEffect } from 'react';\r\n/**\r\n * Gets the address from an ENS name and provider\r\n * @param provider (TEthersProvider)\r\n * @param ensName (string)\r\n * @returns (string) :: address\r\n */\r\nexport const useResolveEnsName = (provider, ensName) => {\r\n    const [address, setAddress] = useState(constants.AddressZero);\r\n    useEffect(() => {\r\n        if (provider) {\r\n            void provider.resolveName(ensName).then((resolvedAddress) => setAddress(resolvedAddress));\r\n        }\r\n    }, [provider, ensName]);\r\n    return address;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}